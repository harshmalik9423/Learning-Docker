docker container run hello-world				#hello-world image is used to build and run a container
docker container run alpine sh					#This will create a new container but do nothing as alpine shell is an interactive program
docker container run -it alpine sh 				#-it is used with run command to run an interactive program
docker container run --rm hello_world			#--rm deletes the container after it exits
docker container run --name cont hello_world	#Gives user defined name "cont" to the container
docker container run -p 80:80 ngnix				#-p creates a port mapping, 80 of local to 80 of container
docker container run -p 80:80 -v "C:/Users/harsh/html:/usr/share/nginx/html" nginx
												#Share static html content to the container
												#Ctrl+d terminates the running container
												#Ctrl+p and then Ctrl+q brings us back to out local machine but container is still running(Only works if -it is used)
docker container ls								#Shows all running containers
docker container ls -a 							#Shows all container(running or not)
docker container attach NAME					#Attaches the user back to the shell of a running container named NAME
docker container start NAME						#Restarts a terminated container "NAME"
docker container stop NAME 						#Terminates a running container "NAME"
docker container kill NAME 						#Kills a running container
docker container run -itd alpine sh 			#-itd starts a container in detached mode. You can attach again using attach command
docker container rm CONT_ID						#removes a container with the given id
docker container ls -aq							#-aq returns only this IDs of the containers
docker container rm $(docker container ls -aq)	#Removes all containers
docker image ls									#lists all local images. -q will list the image IDs
docker image rm NAME_OR_ID						#Removes a docker image of given name of ID

												#Namespaces used by Docker to isolate containers are- pit, net, mnt
												#One conatiner can communicate with other container over a network
docker network ls 								#Displays all available networks
docker network create test 						#Creates a user defined network called test(Bridge by default)
docker network rm test 							#Removes a user defined network named test
docker container run --rm -it --name c1 --network test alpine sh 
												#Creates a container named c1 which is connected to the test network
